// Table Structure
table.tl-table {
	$radius: 6px;
	border-collapse: separate;
	border-spacing: 0;
	min-width: 300px;
	width: 100%;
	border-radius: $radius;

	@include breakpoint-min(desktop-lg) {
		thead {
			th {
				border-top: none;
			}
		}

		tr {
			&:nth-child(odd) td {
				background-color: #fff;
			}
			&:last-child td {
				padding-bottom: 0;
			}
		}

		th,
		td {
			border-top: 1px solid var(--tl-border-color);
			border-top-color: #e0e2ea;

			&:first-child {
				padding-left: 0px;
			}

			&:last-child {
				padding-right: 0px;
			}
		}

		th {
			text-align: left;
			padding: 0 10px;
			white-space: nowrap;
		}

		td {
			padding: 15px 10px;
		}
	} // end @include breakpoint-min(desktop) {...}
}

// Table Responsive Styles
table.tl-table-responsive {
	/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
	@media only screen and (max-width: 1199px), (min-device-width: 1200px) and (max-device-width: 1200px) {
		/* Force table to not be like tables anymore */
		table,
		thead,
		tbody,
		th,
		td,
		tr {
			display: block;
		}

		/* Hide table headers (but not display: none;, for accessibility) */
		thead tr {
			position: absolute;
			top: -9999px;
			left: -9999px;
		}

		tr {
			&:not(:last-child) {
				margin-bottom: 22px;
			}
			td {
				word-break: break-word;
				&:last-child {
					border-bottom: 1px solid var(--tl-border-color, lightgray);
					border-bottom-color: 1px solid E0E2EA;
					border-bottom-left-radius: 6px;
					border-bottom-right-radius: 6px;
				}
				&:first-child {
					border-top-left-radius: 6px;
					border-top-right-radius: 6px;
				}

				&:nth-child(odd) {
					background-color: rgb(255, 255, 255);
				}

				&:nth-child(even) {
					background-color: #fcfcfd;
				}
			}
		}

		td {
			/* Behave  like a "row" */
			border: none;
			border-radius: 0;
			position: relative;
			padding: 10px;

			width: unset;
			text-align: left;

			border-top: 1px solid var(--tl-border-color, lightgray);
			border-left: 1px solid var(--tl-border-color, lightgray);
			border-right: 1px solid var(--tl-border-color, lightgray);

			display: flex;

			&.column-fullwidth {
				padding: 15px 20px;
			}

			&:not(.column-fullwidth) {
				padding-left: 35%;

				&:before {
					/* Now like a table header */
					position: absolute;
					/* Top/left values mimic padding */
					top: 0;
					left: 0;
					width: 30%;
					padding-left: 20px;
					padding-right: 10px;
					white-space: nowrap;

					/* Label the data You could also use a data-* attribute and content for this. That way "bloats" the HTML,this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow. */

					content: attr(data-th);
					height: 100%;
					display: flex;
					align-items: center;

					font-weight: 400;
					font-size: 13px;
					line-height: 138%;
				}
			}
		}
	}
} // end Table Responsive Styles

// Table Elements style
table {
	&.tl-table thead {
		th {
			font-weight: 700;
			font-size: 10px;
			line-height: 30px;
			letter-spacing: 0.26px;
			text-transform: uppercase;
			color: var(--tl-primary-black);
		}
	}

	.tl-table {
		&__tickets {
			a {
				font-weight: 700;
				font-size: 15px;
				line-height: 30px;
				letter-spacing: 0.26px;
				text-transform: capitalize;
				color: #286ef1;
				text-decoration: none;
				&:hover {
					text-decoration: underline;
				}
			}

			p {
				font-weight: 500;
				font-size: 13px;
				line-height: 20px;
				letter-spacing: 0.26px;
				text-transform: capitalize;
			}
		}

		&__default-text {
			font-weight: 400;
			font-size: 13px;
			line-height: 30px;
			letter-spacing: 0.26px;
		}

		&__replies--avatar {
			display: flex;
			align-items: center;
			gap: 10px;
		}
	}
}
